//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Zones
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Zones() : base("LightSwitchApplication:Zones")
        {
            global::LightSwitchApplication.Zones.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Zones CreateInstance()
        {
            return new global::LightSwitchApplication.Zones(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zones_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zones_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zones_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zones_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zones_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zones_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zones_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Configuration_Zones_SelectionChanged();

        partial void Configuration_Zones_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Zones_Loaded(bool succeeded);

        partial void Configuration_Unit_SelectionChanged();

        partial void Configuration_Unit_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Unit_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Configuration_Zones visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Configuration_Zone> Configuration_Zones
        {
            get
            {
                return global::LightSwitchApplication.Zones.DetailsClass.GetValue(this, global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties.Configuration_Zones);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Zones_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Configuration_Unit visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Configuration_Unit> Configuration_Unit
        {
            get
            {
                return global::LightSwitchApplication.Zones.DetailsClass.GetValue(this, global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties.Configuration_Unit);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Unit_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Zones.DetailsClass.PropertySet, global::LightSwitchApplication.Zones.DetailsClass.CommandSet, global::LightSwitchApplication.Zones.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties.Configuration_Zones;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass>.Entry
                __ZonesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass>.Entry(
                    global::LightSwitchApplication.Zones.DetailsClass.__Zones_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Zones.DetailsClass.__Zones_InvokeSavingEvent,
                    global::LightSwitchApplication.Zones.DetailsClass.__Zones_InvokeSavedEvent,
                    global::LightSwitchApplication.Zones.DetailsClass.__Zones_InvokeClosingEvent,
                    global::LightSwitchApplication.Zones.DetailsClass.__Zones_InvokeCreated,
                    global::LightSwitchApplication.Zones.DetailsClass.__Zones_InvokeActivated,
                    global::LightSwitchApplication.Zones.DetailsClass.__Zones_InvokeSaveErrorEvent);
            private static void __Zones_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Zones s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Zones_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Zones_InvokeSavingEvent(global::LightSwitchApplication.Zones s)
            {
                bool handled = false;
                s.Zones_Saving(ref handled);
                return handled;
            }
            private static void __Zones_InvokeSavedEvent(global::LightSwitchApplication.Zones s)
            {
                s.Zones_Saved();
            }
            private static bool __Zones_InvokeClosingEvent(global::LightSwitchApplication.Zones s)
            {
                bool cancel = false;
                s.Zones_Closing(ref cancel);
                return cancel;
            }
            private static void __Zones_InvokeCreated(global::LightSwitchApplication.Zones s)
            {
                s.Zones_Created();
            }
            private static void __Zones_InvokeActivated(global::LightSwitchApplication.Zones s)
            {
                s.Zones_Activated();
            }
            private static bool __Zones_InvokeSaveErrorEvent(global::LightSwitchApplication.Zones s, global::System.Exception ex)
            {
                bool handled = false;
                s.Zones_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Zones.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Zones.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Zones.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Configuration_ZonesQuery()
            {
                return this.Screen.DataWorkspace.lfa_PowerMgmtData_Configuration.Configuration_Zones;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Configuration_UnitQuery()
            {
                if (this.Screen.Configuration_Zones.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Configuration_Unit> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Configuration_Unit>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Configuration_Zones.SelectedItem.Details.Properties.Configuration_Unit).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Configuration_Zone");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Zone>.Data _Configuration_Zones;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Unit>.Data _Configuration_Unit;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Zone> Configuration_Zones
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Zone>)base.GetItem(global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties.Configuration_Zones);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Unit> Configuration_Unit
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Unit>)base.GetItem(global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties.Configuration_Unit);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Zone>.Entry
                    Configuration_Zones = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Zone>.Entry(
                        "Configuration_Zones",
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Zones_Stub,
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Zones_Validate,
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Zones_CreateQuery,
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Zones_SelectionChanged,
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Zones_OnCollectionChanged,
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Zones_OnLoaded);
                private static void _Configuration_Zones_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Zones.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Zone>.Data> c, global::LightSwitchApplication.Zones.DetailsClass d, object sf)
                {
                    c(d, ref d._Configuration_Zones, sf);
                }
                private static void _Configuration_Zones_Validate(global::LightSwitchApplication.Zones s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Configuration_Zones_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Configuration_Zones_CreateQuery(global::LightSwitchApplication.Zones.DetailsClass d, object[] args)
                {
                    return d.Configuration_ZonesQuery();
                }
                private static void _Configuration_Zones_SelectionChanged(global::LightSwitchApplication.Zones s)
                {
                    s.Configuration_Zones_SelectionChanged();
                }
                private static void _Configuration_Zones_OnCollectionChanged(global::LightSwitchApplication.Zones s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Configuration_Zones_Changed(e);
                }
                private static void _Configuration_Zones_OnLoaded(global::LightSwitchApplication.Zones s, bool succeeded)
                {
                    s.Configuration_Zones_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Unit>.Entry
                    Configuration_Unit = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Unit>.Entry(
                        "Configuration_Unit",
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Unit_Stub,
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Unit_Validate,
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Unit_CreateQuery,
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Unit_SelectionChanged,
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Unit_OnCollectionChanged,
                        global::LightSwitchApplication.Zones.DetailsClass.PropertySetProperties._Configuration_Unit_OnLoaded);
                private static void _Configuration_Unit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Zones.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Zones, global::LightSwitchApplication.Zones.DetailsClass, global::LightSwitchApplication.Configuration_Unit>.Data> c, global::LightSwitchApplication.Zones.DetailsClass d, object sf)
                {
                    c(d, ref d._Configuration_Unit, sf);
                }
                private static void _Configuration_Unit_Validate(global::LightSwitchApplication.Zones s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Configuration_Unit_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Configuration_Unit_CreateQuery(global::LightSwitchApplication.Zones.DetailsClass d, object[] args)
                {
                    return d.Configuration_UnitQuery();
                }
                private static void _Configuration_Unit_SelectionChanged(global::LightSwitchApplication.Zones s)
                {
                    s.Configuration_Unit_SelectionChanged();
                }
                private static void _Configuration_Unit_OnCollectionChanged(global::LightSwitchApplication.Zones s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Configuration_Unit_Changed(e);
                }
                private static void _Configuration_Unit_OnLoaded(global::LightSwitchApplication.Zones s, bool succeeded)
                {
                    s.Configuration_Unit_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Units
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Units() : base("LightSwitchApplication:Units")
        {
            global::LightSwitchApplication.Units.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Units CreateInstance()
        {
            return new global::LightSwitchApplication.Units(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Configuration_Unit_SelectionChanged();

        partial void Configuration_Unit_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Unit_Loaded(bool succeeded);

        partial void Configuration_Device_SelectionChanged();

        partial void Configuration_Device_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Device_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Configuration_Unit visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Configuration_Unit> Configuration_Unit
        {
            get
            {
                return global::LightSwitchApplication.Units.DetailsClass.GetValue(this, global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties.Configuration_Unit);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Unit_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Configuration_Device visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Configuration_Device> Configuration_Device
        {
            get
            {
                return global::LightSwitchApplication.Units.DetailsClass.GetValue(this, global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties.Configuration_Device);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Device_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Units.DetailsClass.PropertySet, global::LightSwitchApplication.Units.DetailsClass.CommandSet, global::LightSwitchApplication.Units.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties.Configuration_Unit;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass>.Entry
                __UnitsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass>.Entry(
                    global::LightSwitchApplication.Units.DetailsClass.__Units_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Units.DetailsClass.__Units_InvokeSavingEvent,
                    global::LightSwitchApplication.Units.DetailsClass.__Units_InvokeSavedEvent,
                    global::LightSwitchApplication.Units.DetailsClass.__Units_InvokeClosingEvent,
                    global::LightSwitchApplication.Units.DetailsClass.__Units_InvokeCreated,
                    global::LightSwitchApplication.Units.DetailsClass.__Units_InvokeActivated,
                    global::LightSwitchApplication.Units.DetailsClass.__Units_InvokeSaveErrorEvent);
            private static void __Units_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Units s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Units_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Units_InvokeSavingEvent(global::LightSwitchApplication.Units s)
            {
                bool handled = false;
                s.Units_Saving(ref handled);
                return handled;
            }
            private static void __Units_InvokeSavedEvent(global::LightSwitchApplication.Units s)
            {
                s.Units_Saved();
            }
            private static bool __Units_InvokeClosingEvent(global::LightSwitchApplication.Units s)
            {
                bool cancel = false;
                s.Units_Closing(ref cancel);
                return cancel;
            }
            private static void __Units_InvokeCreated(global::LightSwitchApplication.Units s)
            {
                s.Units_Created();
            }
            private static void __Units_InvokeActivated(global::LightSwitchApplication.Units s)
            {
                s.Units_Activated();
            }
            private static bool __Units_InvokeSaveErrorEvent(global::LightSwitchApplication.Units s, global::System.Exception ex)
            {
                bool handled = false;
                s.Units_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Units.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Units.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Units.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Configuration_UnitQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.lfa_PowerMgmtData_Configuration.Configuration_Unit,
                    "Configuration_Zone");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Configuration_DeviceQuery()
            {
                if (this.Screen.Configuration_Unit.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Configuration_Device> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Configuration_Device>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Configuration_Unit.SelectedItem.Details.Properties.Configuration_Device).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Unit>.Data _Configuration_Unit;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Device>.Data _Configuration_Device;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Unit> Configuration_Unit
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Unit>)base.GetItem(global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties.Configuration_Unit);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Device> Configuration_Device
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Device>)base.GetItem(global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties.Configuration_Device);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Unit>.Entry
                    Configuration_Unit = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Unit>.Entry(
                        "Configuration_Unit",
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Unit_Stub,
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Unit_Validate,
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Unit_CreateQuery,
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Unit_SelectionChanged,
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Unit_OnCollectionChanged,
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Unit_OnLoaded);
                private static void _Configuration_Unit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Units.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Unit>.Data> c, global::LightSwitchApplication.Units.DetailsClass d, object sf)
                {
                    c(d, ref d._Configuration_Unit, sf);
                }
                private static void _Configuration_Unit_Validate(global::LightSwitchApplication.Units s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Configuration_Unit_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Configuration_Unit_CreateQuery(global::LightSwitchApplication.Units.DetailsClass d, object[] args)
                {
                    return d.Configuration_UnitQuery();
                }
                private static void _Configuration_Unit_SelectionChanged(global::LightSwitchApplication.Units s)
                {
                    s.Configuration_Unit_SelectionChanged();
                }
                private static void _Configuration_Unit_OnCollectionChanged(global::LightSwitchApplication.Units s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Configuration_Unit_Changed(e);
                }
                private static void _Configuration_Unit_OnLoaded(global::LightSwitchApplication.Units s, bool succeeded)
                {
                    s.Configuration_Unit_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Device>.Entry
                    Configuration_Device = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Device>.Entry(
                        "Configuration_Device",
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Device_Stub,
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Device_Validate,
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Device_CreateQuery,
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Device_SelectionChanged,
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Device_OnCollectionChanged,
                        global::LightSwitchApplication.Units.DetailsClass.PropertySetProperties._Configuration_Device_OnLoaded);
                private static void _Configuration_Device_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Units.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Units, global::LightSwitchApplication.Units.DetailsClass, global::LightSwitchApplication.Configuration_Device>.Data> c, global::LightSwitchApplication.Units.DetailsClass d, object sf)
                {
                    c(d, ref d._Configuration_Device, sf);
                }
                private static void _Configuration_Device_Validate(global::LightSwitchApplication.Units s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Configuration_Device_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Configuration_Device_CreateQuery(global::LightSwitchApplication.Units.DetailsClass d, object[] args)
                {
                    return d.Configuration_DeviceQuery();
                }
                private static void _Configuration_Device_SelectionChanged(global::LightSwitchApplication.Units s)
                {
                    s.Configuration_Device_SelectionChanged();
                }
                private static void _Configuration_Device_OnCollectionChanged(global::LightSwitchApplication.Units s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Configuration_Device_Changed(e);
                }
                private static void _Configuration_Device_OnLoaded(global::LightSwitchApplication.Units s, bool succeeded)
                {
                    s.Configuration_Device_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Devices
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Devices() : base("LightSwitchApplication:Devices")
        {
            global::LightSwitchApplication.Devices.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Devices CreateInstance()
        {
            return new global::LightSwitchApplication.Devices(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Configuration_Devices_SelectionChanged();

        partial void Configuration_Devices_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Devices_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Configuration_Devices visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Configuration_Device> Configuration_Devices
        {
            get
            {
                return global::LightSwitchApplication.Devices.DetailsClass.GetValue(this, global::LightSwitchApplication.Devices.DetailsClass.PropertySetProperties.Configuration_Devices);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Devices_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass, global::LightSwitchApplication.Devices.DetailsClass.PropertySet, global::LightSwitchApplication.Devices.DetailsClass.CommandSet, global::LightSwitchApplication.Devices.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.Devices.DetailsClass.PropertySetProperties.Configuration_Devices;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass>.Entry
                __DevicesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass>.Entry(
                    global::LightSwitchApplication.Devices.DetailsClass.__Devices_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Devices.DetailsClass.__Devices_InvokeSavingEvent,
                    global::LightSwitchApplication.Devices.DetailsClass.__Devices_InvokeSavedEvent,
                    global::LightSwitchApplication.Devices.DetailsClass.__Devices_InvokeClosingEvent,
                    global::LightSwitchApplication.Devices.DetailsClass.__Devices_InvokeCreated,
                    global::LightSwitchApplication.Devices.DetailsClass.__Devices_InvokeActivated,
                    global::LightSwitchApplication.Devices.DetailsClass.__Devices_InvokeSaveErrorEvent);
            private static void __Devices_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Devices s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Devices_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Devices_InvokeSavingEvent(global::LightSwitchApplication.Devices s)
            {
                bool handled = false;
                s.Devices_Saving(ref handled);
                return handled;
            }
            private static void __Devices_InvokeSavedEvent(global::LightSwitchApplication.Devices s)
            {
                s.Devices_Saved();
            }
            private static bool __Devices_InvokeClosingEvent(global::LightSwitchApplication.Devices s)
            {
                bool cancel = false;
                s.Devices_Closing(ref cancel);
                return cancel;
            }
            private static void __Devices_InvokeCreated(global::LightSwitchApplication.Devices s)
            {
                s.Devices_Created();
            }
            private static void __Devices_InvokeActivated(global::LightSwitchApplication.Devices s)
            {
                s.Devices_Activated();
            }
            private static bool __Devices_InvokeSaveErrorEvent(global::LightSwitchApplication.Devices s, global::System.Exception ex)
            {
                bool handled = false;
                s.Devices_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Devices.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Devices.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Devices.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Configuration_DevicesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.lfa_PowerMgmtData_Configuration.Configuration_Devices,
                    "Configuration_Unit");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass, global::LightSwitchApplication.Configuration_Device>.Data _Configuration_Devices;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass, global::LightSwitchApplication.Configuration_Device> Configuration_Devices
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass, global::LightSwitchApplication.Configuration_Device>)base.GetItem(global::LightSwitchApplication.Devices.DetailsClass.PropertySetProperties.Configuration_Devices);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass, global::LightSwitchApplication.Configuration_Device>.Entry
                    Configuration_Devices = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass, global::LightSwitchApplication.Configuration_Device>.Entry(
                        "Configuration_Devices",
                        global::LightSwitchApplication.Devices.DetailsClass.PropertySetProperties._Configuration_Devices_Stub,
                        global::LightSwitchApplication.Devices.DetailsClass.PropertySetProperties._Configuration_Devices_Validate,
                        global::LightSwitchApplication.Devices.DetailsClass.PropertySetProperties._Configuration_Devices_CreateQuery,
                        global::LightSwitchApplication.Devices.DetailsClass.PropertySetProperties._Configuration_Devices_SelectionChanged,
                        global::LightSwitchApplication.Devices.DetailsClass.PropertySetProperties._Configuration_Devices_OnCollectionChanged,
                        global::LightSwitchApplication.Devices.DetailsClass.PropertySetProperties._Configuration_Devices_OnLoaded);
                private static void _Configuration_Devices_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Devices.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Devices, global::LightSwitchApplication.Devices.DetailsClass, global::LightSwitchApplication.Configuration_Device>.Data> c, global::LightSwitchApplication.Devices.DetailsClass d, object sf)
                {
                    c(d, ref d._Configuration_Devices, sf);
                }
                private static void _Configuration_Devices_Validate(global::LightSwitchApplication.Devices s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Configuration_Devices_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Configuration_Devices_CreateQuery(global::LightSwitchApplication.Devices.DetailsClass d, object[] args)
                {
                    return d.Configuration_DevicesQuery();
                }
                private static void _Configuration_Devices_SelectionChanged(global::LightSwitchApplication.Devices s)
                {
                    s.Configuration_Devices_SelectionChanged();
                }
                private static void _Configuration_Devices_OnCollectionChanged(global::LightSwitchApplication.Devices s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Configuration_Devices_Changed(e);
                }
                private static void _Configuration_Devices_OnLoaded(global::LightSwitchApplication.Devices s, bool succeeded)
                {
                    s.Configuration_Devices_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Schedule
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Schedule() : base("LightSwitchApplication:Schedule")
        {
            global::LightSwitchApplication.Schedule.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Schedule CreateInstance()
        {
            return new global::LightSwitchApplication.Schedule(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Schedule_Schedule_SelectionChanged();

        partial void Schedule_Schedule_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Schedule_Loaded(bool succeeded);

        partial void Schedule_Unit_SelectionChanged();

        partial void Schedule_Unit_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Unit_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Schedule_Schedule visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Schedule_Schedule> Schedule_Schedule
        {
            get
            {
                return global::LightSwitchApplication.Schedule.DetailsClass.GetValue(this, global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties.Schedule_Schedule);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Schedule_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Schedule_Unit visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Schedule_Unit> Schedule_Unit
        {
            get
            {
                return global::LightSwitchApplication.Schedule.DetailsClass.GetValue(this, global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties.Schedule_Unit);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Unit_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule.DetailsClass.PropertySet, global::LightSwitchApplication.Schedule.DetailsClass.CommandSet, global::LightSwitchApplication.Schedule.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties.Schedule_Schedule;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass>.Entry
                __ScheduleEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass>.Entry(
                    global::LightSwitchApplication.Schedule.DetailsClass.__Schedule_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Schedule.DetailsClass.__Schedule_InvokeSavingEvent,
                    global::LightSwitchApplication.Schedule.DetailsClass.__Schedule_InvokeSavedEvent,
                    global::LightSwitchApplication.Schedule.DetailsClass.__Schedule_InvokeClosingEvent,
                    global::LightSwitchApplication.Schedule.DetailsClass.__Schedule_InvokeCreated,
                    global::LightSwitchApplication.Schedule.DetailsClass.__Schedule_InvokeActivated,
                    global::LightSwitchApplication.Schedule.DetailsClass.__Schedule_InvokeSaveErrorEvent);
            private static void __Schedule_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Schedule s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Schedule_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Schedule_InvokeSavingEvent(global::LightSwitchApplication.Schedule s)
            {
                bool handled = false;
                s.Schedule_Saving(ref handled);
                return handled;
            }
            private static void __Schedule_InvokeSavedEvent(global::LightSwitchApplication.Schedule s)
            {
                s.Schedule_Saved();
            }
            private static bool __Schedule_InvokeClosingEvent(global::LightSwitchApplication.Schedule s)
            {
                bool cancel = false;
                s.Schedule_Closing(ref cancel);
                return cancel;
            }
            private static void __Schedule_InvokeCreated(global::LightSwitchApplication.Schedule s)
            {
                s.Schedule_Created();
            }
            private static void __Schedule_InvokeActivated(global::LightSwitchApplication.Schedule s)
            {
                s.Schedule_Activated();
            }
            private static bool __Schedule_InvokeSaveErrorEvent(global::LightSwitchApplication.Schedule s, global::System.Exception ex)
            {
                bool handled = false;
                s.Schedule_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Schedule.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Schedule.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Schedule.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Schedule_ScheduleQuery()
            {
                return this.Screen.DataWorkspace.lfa_PowerMgmtData_Schedule.Schedule_Schedule;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Schedule_UnitQuery()
            {
                if (this.Screen.Schedule_Schedule.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Schedule_Unit> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Schedule_Unit>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Schedule_Schedule.SelectedItem.Details.Properties.Schedule_Unit).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Schedule>.Data _Schedule_Schedule;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Unit>.Data _Schedule_Unit;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Schedule> Schedule_Schedule
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Schedule>)base.GetItem(global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties.Schedule_Schedule);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Unit> Schedule_Unit
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Unit>)base.GetItem(global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties.Schedule_Unit);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Schedule>.Entry
                    Schedule_Schedule = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Schedule>.Entry(
                        "Schedule_Schedule",
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Schedule_Stub,
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Schedule_Validate,
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Schedule_CreateQuery,
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Schedule_SelectionChanged,
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Schedule_OnCollectionChanged,
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Schedule_OnLoaded);
                private static void _Schedule_Schedule_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Schedule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Schedule>.Data> c, global::LightSwitchApplication.Schedule.DetailsClass d, object sf)
                {
                    c(d, ref d._Schedule_Schedule, sf);
                }
                private static void _Schedule_Schedule_Validate(global::LightSwitchApplication.Schedule s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Schedule_Schedule_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Schedule_Schedule_CreateQuery(global::LightSwitchApplication.Schedule.DetailsClass d, object[] args)
                {
                    return d.Schedule_ScheduleQuery();
                }
                private static void _Schedule_Schedule_SelectionChanged(global::LightSwitchApplication.Schedule s)
                {
                    s.Schedule_Schedule_SelectionChanged();
                }
                private static void _Schedule_Schedule_OnCollectionChanged(global::LightSwitchApplication.Schedule s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Schedule_Schedule_Changed(e);
                }
                private static void _Schedule_Schedule_OnLoaded(global::LightSwitchApplication.Schedule s, bool succeeded)
                {
                    s.Schedule_Schedule_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Unit>.Entry
                    Schedule_Unit = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Unit>.Entry(
                        "Schedule_Unit",
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Unit_Stub,
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Unit_Validate,
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Unit_CreateQuery,
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Unit_SelectionChanged,
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Unit_OnCollectionChanged,
                        global::LightSwitchApplication.Schedule.DetailsClass.PropertySetProperties._Schedule_Unit_OnLoaded);
                private static void _Schedule_Unit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Schedule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule, global::LightSwitchApplication.Schedule.DetailsClass, global::LightSwitchApplication.Schedule_Unit>.Data> c, global::LightSwitchApplication.Schedule.DetailsClass d, object sf)
                {
                    c(d, ref d._Schedule_Unit, sf);
                }
                private static void _Schedule_Unit_Validate(global::LightSwitchApplication.Schedule s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Schedule_Unit_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Schedule_Unit_CreateQuery(global::LightSwitchApplication.Schedule.DetailsClass d, object[] args)
                {
                    return d.Schedule_UnitQuery();
                }
                private static void _Schedule_Unit_SelectionChanged(global::LightSwitchApplication.Schedule s)
                {
                    s.Schedule_Unit_SelectionChanged();
                }
                private static void _Schedule_Unit_OnCollectionChanged(global::LightSwitchApplication.Schedule s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Schedule_Unit_Changed(e);
                }
                private static void _Schedule_Unit_OnLoaded(global::LightSwitchApplication.Schedule s, bool succeeded)
                {
                    s.Schedule_Unit_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Schedule_UnitListDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Schedule_UnitListDetail() : base("LightSwitchApplication:Schedule_UnitListDetail")
        {
            global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Schedule_UnitListDetail CreateInstance()
        {
            return new global::LightSwitchApplication.Schedule_UnitListDetail(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_UnitListDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_UnitListDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_UnitListDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_UnitListDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_UnitListDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_UnitListDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_UnitListDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Schedule_Unit_SelectionChanged();

        partial void Schedule_Unit_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Unit_Loaded(bool succeeded);

        partial void Schedule_Device_SelectionChanged();

        partial void Schedule_Device_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Device_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Schedule_Unit visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Schedule_Unit> Schedule_Unit
        {
            get
            {
                return global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties.Schedule_Unit);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Unit_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Schedule_Device visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Schedule_Device> Schedule_Device
        {
            get
            {
                return global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties.Schedule_Device);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Device_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySet, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.CommandSet, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties.Schedule_Unit;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass>.Entry
                __Schedule_UnitListDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.__Schedule_UnitListDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.__Schedule_UnitListDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.__Schedule_UnitListDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.__Schedule_UnitListDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.__Schedule_UnitListDetail_InvokeCreated,
                    global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.__Schedule_UnitListDetail_InvokeActivated,
                    global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.__Schedule_UnitListDetail_InvokeSaveErrorEvent);
            private static void __Schedule_UnitListDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Schedule_UnitListDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Schedule_UnitListDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Schedule_UnitListDetail_InvokeSavingEvent(global::LightSwitchApplication.Schedule_UnitListDetail s)
            {
                bool handled = false;
                s.Schedule_UnitListDetail_Saving(ref handled);
                return handled;
            }
            private static void __Schedule_UnitListDetail_InvokeSavedEvent(global::LightSwitchApplication.Schedule_UnitListDetail s)
            {
                s.Schedule_UnitListDetail_Saved();
            }
            private static bool __Schedule_UnitListDetail_InvokeClosingEvent(global::LightSwitchApplication.Schedule_UnitListDetail s)
            {
                bool cancel = false;
                s.Schedule_UnitListDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __Schedule_UnitListDetail_InvokeCreated(global::LightSwitchApplication.Schedule_UnitListDetail s)
            {
                s.Schedule_UnitListDetail_Created();
            }
            private static void __Schedule_UnitListDetail_InvokeActivated(global::LightSwitchApplication.Schedule_UnitListDetail s)
            {
                s.Schedule_UnitListDetail_Activated();
            }
            private static bool __Schedule_UnitListDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.Schedule_UnitListDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.Schedule_UnitListDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Schedule_UnitQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.lfa_PowerMgmtData_Schedule.Schedule_Unit,
                    "Schedule_Schedule");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Schedule_DeviceQuery()
            {
                if (this.Screen.Schedule_Unit.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Schedule_Device> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Schedule_Device>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Schedule_Unit.SelectedItem.Details.Properties.Schedule_Device).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Unit>.Data _Schedule_Unit;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device>.Data _Schedule_Device;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Unit> Schedule_Unit
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Unit>)base.GetItem(global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties.Schedule_Unit);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device> Schedule_Device
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device>)base.GetItem(global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties.Schedule_Device);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Unit>.Entry
                    Schedule_Unit = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Unit>.Entry(
                        "Schedule_Unit",
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Unit_Stub,
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Unit_Validate,
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Unit_CreateQuery,
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Unit_SelectionChanged,
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Unit_OnCollectionChanged,
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Unit_OnLoaded);
                private static void _Schedule_Unit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Unit>.Data> c, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Schedule_Unit, sf);
                }
                private static void _Schedule_Unit_Validate(global::LightSwitchApplication.Schedule_UnitListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Schedule_Unit_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Schedule_Unit_CreateQuery(global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass d, object[] args)
                {
                    return d.Schedule_UnitQuery();
                }
                private static void _Schedule_Unit_SelectionChanged(global::LightSwitchApplication.Schedule_UnitListDetail s)
                {
                    s.Schedule_Unit_SelectionChanged();
                }
                private static void _Schedule_Unit_OnCollectionChanged(global::LightSwitchApplication.Schedule_UnitListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Schedule_Unit_Changed(e);
                }
                private static void _Schedule_Unit_OnLoaded(global::LightSwitchApplication.Schedule_UnitListDetail s, bool succeeded)
                {
                    s.Schedule_Unit_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device>.Entry
                    Schedule_Device = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device>.Entry(
                        "Schedule_Device",
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Device_Stub,
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Device_Validate,
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Device_CreateQuery,
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Device_SelectionChanged,
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Device_OnCollectionChanged,
                        global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass.PropertySetProperties._Schedule_Device_OnLoaded);
                private static void _Schedule_Device_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_UnitListDetail, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device>.Data> c, global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Schedule_Device, sf);
                }
                private static void _Schedule_Device_Validate(global::LightSwitchApplication.Schedule_UnitListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Schedule_Device_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Schedule_Device_CreateQuery(global::LightSwitchApplication.Schedule_UnitListDetail.DetailsClass d, object[] args)
                {
                    return d.Schedule_DeviceQuery();
                }
                private static void _Schedule_Device_SelectionChanged(global::LightSwitchApplication.Schedule_UnitListDetail s)
                {
                    s.Schedule_Device_SelectionChanged();
                }
                private static void _Schedule_Device_OnCollectionChanged(global::LightSwitchApplication.Schedule_UnitListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Schedule_Device_Changed(e);
                }
                private static void _Schedule_Device_OnLoaded(global::LightSwitchApplication.Schedule_UnitListDetail s, bool succeeded)
                {
                    s.Schedule_Device_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Schedule_DeviceListDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Schedule_DeviceListDetail() : base("LightSwitchApplication:Schedule_DeviceListDetail")
        {
            global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Schedule_DeviceListDetail CreateInstance()
        {
            return new global::LightSwitchApplication.Schedule_DeviceListDetail(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_DeviceListDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_DeviceListDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_DeviceListDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_DeviceListDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_DeviceListDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_DeviceListDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_DeviceListDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Schedule_Device_SelectionChanged();

        partial void Schedule_Device_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Device_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Schedule_Device visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Schedule_Device> Schedule_Device
        {
            get
            {
                return global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.PropertySetProperties.Schedule_Device);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Device_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.PropertySet, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.CommandSet, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.PropertySetProperties.Schedule_Device;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass>.Entry
                __Schedule_DeviceListDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.__Schedule_DeviceListDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.__Schedule_DeviceListDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.__Schedule_DeviceListDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.__Schedule_DeviceListDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.__Schedule_DeviceListDetail_InvokeCreated,
                    global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.__Schedule_DeviceListDetail_InvokeActivated,
                    global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.__Schedule_DeviceListDetail_InvokeSaveErrorEvent);
            private static void __Schedule_DeviceListDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Schedule_DeviceListDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Schedule_DeviceListDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Schedule_DeviceListDetail_InvokeSavingEvent(global::LightSwitchApplication.Schedule_DeviceListDetail s)
            {
                bool handled = false;
                s.Schedule_DeviceListDetail_Saving(ref handled);
                return handled;
            }
            private static void __Schedule_DeviceListDetail_InvokeSavedEvent(global::LightSwitchApplication.Schedule_DeviceListDetail s)
            {
                s.Schedule_DeviceListDetail_Saved();
            }
            private static bool __Schedule_DeviceListDetail_InvokeClosingEvent(global::LightSwitchApplication.Schedule_DeviceListDetail s)
            {
                bool cancel = false;
                s.Schedule_DeviceListDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __Schedule_DeviceListDetail_InvokeCreated(global::LightSwitchApplication.Schedule_DeviceListDetail s)
            {
                s.Schedule_DeviceListDetail_Created();
            }
            private static void __Schedule_DeviceListDetail_InvokeActivated(global::LightSwitchApplication.Schedule_DeviceListDetail s)
            {
                s.Schedule_DeviceListDetail_Activated();
            }
            private static bool __Schedule_DeviceListDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.Schedule_DeviceListDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.Schedule_DeviceListDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Schedule_DeviceQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.lfa_PowerMgmtData_Schedule.Schedule_Device,
                    "Schedule_Unit");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device>.Data _Schedule_Device;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device> Schedule_Device
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device>)base.GetItem(global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.PropertySetProperties.Schedule_Device);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device>.Entry
                    Schedule_Device = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device>.Entry(
                        "Schedule_Device",
                        global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.PropertySetProperties._Schedule_Device_Stub,
                        global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.PropertySetProperties._Schedule_Device_Validate,
                        global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.PropertySetProperties._Schedule_Device_CreateQuery,
                        global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.PropertySetProperties._Schedule_Device_SelectionChanged,
                        global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.PropertySetProperties._Schedule_Device_OnCollectionChanged,
                        global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass.PropertySetProperties._Schedule_Device_OnLoaded);
                private static void _Schedule_Device_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Schedule_DeviceListDetail, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass, global::LightSwitchApplication.Schedule_Device>.Data> c, global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Schedule_Device, sf);
                }
                private static void _Schedule_Device_Validate(global::LightSwitchApplication.Schedule_DeviceListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Schedule_Device_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Schedule_Device_CreateQuery(global::LightSwitchApplication.Schedule_DeviceListDetail.DetailsClass d, object[] args)
                {
                    return d.Schedule_DeviceQuery();
                }
                private static void _Schedule_Device_SelectionChanged(global::LightSwitchApplication.Schedule_DeviceListDetail s)
                {
                    s.Schedule_Device_SelectionChanged();
                }
                private static void _Schedule_Device_OnCollectionChanged(global::LightSwitchApplication.Schedule_DeviceListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Schedule_Device_Changed(e);
                }
                private static void _Schedule_Device_OnLoaded(global::LightSwitchApplication.Schedule_DeviceListDetail s, bool succeeded)
                {
                    s.Schedule_Device_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
}
