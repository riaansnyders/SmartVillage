//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("lfa_PowerMgmtData", "FK_Device_Device", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lfa_PowerMgmtData.Implementation.Device), "Device1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lfa_PowerMgmtData.Implementation.Device1Item), true)]
[assembly: EdmRelationshipAttribute("lfa_PowerMgmtData", "FK_Device_Unit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lfa_PowerMgmtData.Implementation.Unit), "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lfa_PowerMgmtData.Implementation.Device), true)]
[assembly: EdmRelationshipAttribute("lfa_PowerMgmtData", "FK_Device_Unit1", "Unit1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(lfa_PowerMgmtData.Implementation.Unit1Item), "Device1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lfa_PowerMgmtData.Implementation.Device1Item), true)]
[assembly: EdmRelationshipAttribute("lfa_PowerMgmtData", "FK_Unit_Unit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lfa_PowerMgmtData.Implementation.Unit), "Unit1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lfa_PowerMgmtData.Implementation.Unit1Item), true)]

#endregion

namespace lfa_PowerMgmtData.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class lfa_PowerMgmtDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new lfa_PowerMgmtDataObjectContext object using the connection string found in the 'lfa_PowerMgmtDataObjectContext' section of the application configuration file.
        /// </summary>
        public lfa_PowerMgmtDataObjectContext() : base("name=lfa_PowerMgmtDataObjectContext", "lfa_PowerMgmtDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new lfa_PowerMgmtDataObjectContext object.
        /// </summary>
        public lfa_PowerMgmtDataObjectContext(string connectionString) : base(connectionString, "lfa_PowerMgmtDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new lfa_PowerMgmtDataObjectContext object.
        /// </summary>
        public lfa_PowerMgmtDataObjectContext(EntityConnection connection) : base(connection, "lfa_PowerMgmtDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Device> Devices
        {
            get
            {
                if ((_Devices == null))
                {
                    _Devices = base.CreateObjectSet<Device>("Devices");
                }
                return _Devices;
            }
        }
        private ObjectSet<Device> _Devices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Unit> Units
        {
            get
            {
                if ((_Units == null))
                {
                    _Units = base.CreateObjectSet<Unit>("Units");
                }
                return _Units;
            }
        }
        private ObjectSet<Unit> _Units;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Device1Item> Device1
        {
            get
            {
                if ((_Device1 == null))
                {
                    _Device1 = base.CreateObjectSet<Device1Item>("Device1");
                }
                return _Device1;
            }
        }
        private ObjectSet<Device1Item> _Device1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Unit1Item> Unit1
        {
            get
            {
                if ((_Unit1 == null))
                {
                    _Unit1 = base.CreateObjectSet<Unit1Item>("Unit1");
                }
                return _Unit1;
            }
        }
        private ObjectSet<Unit1Item> _Unit1;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Devices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDevices(Device device)
        {
            base.AddObject("Devices", device);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Units EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnits(Unit unit)
        {
            base.AddObject("Units", unit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Device1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDevice1(Device1Item device1Item)
        {
            base.AddObject("Device1", device1Item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Unit1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnit1(Unit1Item unit1Item)
        {
            base.AddObject("Unit1", unit1Item);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lfa_PowerMgmtData", Name="Device")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Device : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Device object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="id_Unit">Initial value of the Id_Unit property.</param>
        public static Device CreateDevice(global::System.Int32 id, global::System.String name, global::System.DateTime dateAdded, global::System.Boolean isActive, global::System.Int32 id_Unit)
        {
            Device device = new Device();
            device.Id = id;
            device.Name = name;
            device.DateAdded = dateAdded;
            device.IsActive = isActive;
            device.Id_Unit = id_Unit;
            return device;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_Unit
        {
            get
            {
                return _Id_Unit;
            }
            set
            {
                OnId_UnitChanging(value);
                ReportPropertyChanging("Id_Unit");
                _Id_Unit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Unit");
                OnId_UnitChanged();
            }
        }
        private global::System.Int32 _Id_Unit;
        partial void OnId_UnitChanging(global::System.Int32 value);
        partial void OnId_UnitChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData", "FK_Device_Device", "Device1")]
        public EntityCollection<Device1Item> Device1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Device1Item>("lfa_PowerMgmtData.FK_Device_Device", "Device1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Device1Item>("lfa_PowerMgmtData.FK_Device_Device", "Device1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData", "FK_Device_Unit", "Unit")]
        public Unit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("lfa_PowerMgmtData.FK_Device_Unit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("lfa_PowerMgmtData.FK_Device_Unit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("lfa_PowerMgmtData.FK_Device_Unit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("lfa_PowerMgmtData.FK_Device_Unit", "Unit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lfa_PowerMgmtData", Name="Device1Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Device1Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Device1Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="id_Device">Initial value of the Id_Device property.</param>
        public static Device1Item CreateDevice1Item(global::System.Int32 id, global::System.Int32 id_Device)
        {
            Device1Item device1Item = new Device1Item();
            device1Item.Id = id;
            device1Item.Id_Device = id_Device;
            return device1Item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_Device
        {
            get
            {
                return _Id_Device;
            }
            set
            {
                OnId_DeviceChanging(value);
                ReportPropertyChanging("Id_Device");
                _Id_Device = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Device");
                OnId_DeviceChanged();
            }
        }
        private global::System.Int32 _Id_Device;
        partial void OnId_DeviceChanging(global::System.Int32 value);
        partial void OnId_DeviceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Id_ScheduleUnit
        {
            get
            {
                return _Id_ScheduleUnit;
            }
            set
            {
                OnId_ScheduleUnitChanging(value);
                ReportPropertyChanging("Id_ScheduleUnit");
                _Id_ScheduleUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_ScheduleUnit");
                OnId_ScheduleUnitChanged();
            }
        }
        private Nullable<global::System.Int32> _Id_ScheduleUnit;
        partial void OnId_ScheduleUnitChanging(Nullable<global::System.Int32> value);
        partial void OnId_ScheduleUnitChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData", "FK_Device_Device", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("lfa_PowerMgmtData.FK_Device_Device", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("lfa_PowerMgmtData.FK_Device_Device", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("lfa_PowerMgmtData.FK_Device_Device", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("lfa_PowerMgmtData.FK_Device_Device", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData", "FK_Device_Unit1", "Unit1")]
        public Unit1Item Unit1Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit1Item>("lfa_PowerMgmtData.FK_Device_Unit1", "Unit1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit1Item>("lfa_PowerMgmtData.FK_Device_Unit1", "Unit1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit1Item> Unit1ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit1Item>("lfa_PowerMgmtData.FK_Device_Unit1", "Unit1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit1Item>("lfa_PowerMgmtData.FK_Device_Unit1", "Unit1", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lfa_PowerMgmtData", Name="Unit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Unit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Unit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="id_Zone">Initial value of the Id_Zone property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Unit CreateUnit(global::System.Int32 id, global::System.Int32 id_Zone, global::System.String name, global::System.DateTime dateAdded, global::System.String address, global::System.Boolean isActive)
        {
            Unit unit = new Unit();
            unit.Id = id;
            unit.Id_Zone = id_Zone;
            unit.Name = name;
            unit.DateAdded = dateAdded;
            unit.Address = address;
            unit.IsActive = isActive;
            return unit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_Zone
        {
            get
            {
                return _Id_Zone;
            }
            set
            {
                OnId_ZoneChanging(value);
                ReportPropertyChanging("Id_Zone");
                _Id_Zone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Zone");
                OnId_ZoneChanged();
            }
        }
        private global::System.Int32 _Id_Zone;
        partial void OnId_ZoneChanging(global::System.Int32 value);
        partial void OnId_ZoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData", "FK_Device_Unit", "Device")]
        public EntityCollection<Device> Devices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Device>("lfa_PowerMgmtData.FK_Device_Unit", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Device>("lfa_PowerMgmtData.FK_Device_Unit", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData", "FK_Unit_Unit", "Unit1")]
        public EntityCollection<Unit1Item> Unit1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Unit1Item>("lfa_PowerMgmtData.FK_Unit_Unit", "Unit1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Unit1Item>("lfa_PowerMgmtData.FK_Unit_Unit", "Unit1", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lfa_PowerMgmtData", Name="Unit1Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Unit1Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Unit1Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="id_Schedule">Initial value of the Id_Schedule property.</param>
        /// <param name="id_Unit">Initial value of the Id_Unit property.</param>
        public static Unit1Item CreateUnit1Item(global::System.Int32 id, global::System.Int32 id_Schedule, global::System.Int32 id_Unit)
        {
            Unit1Item unit1Item = new Unit1Item();
            unit1Item.Id = id;
            unit1Item.Id_Schedule = id_Schedule;
            unit1Item.Id_Unit = id_Unit;
            return unit1Item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_Schedule
        {
            get
            {
                return _Id_Schedule;
            }
            set
            {
                OnId_ScheduleChanging(value);
                ReportPropertyChanging("Id_Schedule");
                _Id_Schedule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Schedule");
                OnId_ScheduleChanged();
            }
        }
        private global::System.Int32 _Id_Schedule;
        partial void OnId_ScheduleChanging(global::System.Int32 value);
        partial void OnId_ScheduleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_Unit
        {
            get
            {
                return _Id_Unit;
            }
            set
            {
                OnId_UnitChanging(value);
                ReportPropertyChanging("Id_Unit");
                _Id_Unit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Unit");
                OnId_UnitChanged();
            }
        }
        private global::System.Int32 _Id_Unit;
        partial void OnId_UnitChanging(global::System.Int32 value);
        partial void OnId_UnitChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData", "FK_Device_Unit1", "Device1")]
        public EntityCollection<Device1Item> Device1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Device1Item>("lfa_PowerMgmtData.FK_Device_Unit1", "Device1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Device1Item>("lfa_PowerMgmtData.FK_Device_Unit1", "Device1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData", "FK_Unit_Unit", "Unit")]
        public Unit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("lfa_PowerMgmtData.FK_Unit_Unit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("lfa_PowerMgmtData.FK_Unit_Unit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("lfa_PowerMgmtData.FK_Unit_Unit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("lfa_PowerMgmtData.FK_Unit_Unit", "Unit", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
