//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("lfa_PowerMgmtData_Configuration", "Configuration_Unit_Configuration_Device", "Configuration_Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lfa_PowerMgmtData_Configuration.Implementation.Configuration_Unit), "Configuration_Device", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lfa_PowerMgmtData_Configuration.Implementation.Configuration_Device), true)]
[assembly: EdmRelationshipAttribute("lfa_PowerMgmtData_Configuration", "Configuration_Zone_Configuration_Unit", "Configuration_Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lfa_PowerMgmtData_Configuration.Implementation.Configuration_Zone), "Configuration_Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lfa_PowerMgmtData_Configuration.Implementation.Configuration_Unit), true)]
[assembly: EdmRelationshipAttribute("lfa_PowerMgmtData_Configuration", "FK_Device_Zone", "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(lfa_PowerMgmtData_Configuration.Implementation.Configuration_Zone), "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lfa_PowerMgmtData_Configuration.Implementation.Configuration_Device), true)]

#endregion

namespace lfa_PowerMgmtData_Configuration.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class lfa_PowerMgmtData_ConfigurationObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new lfa_PowerMgmtData_ConfigurationObjectContext object using the connection string found in the 'lfa_PowerMgmtData_ConfigurationObjectContext' section of the application configuration file.
        /// </summary>
        public lfa_PowerMgmtData_ConfigurationObjectContext() : base("name=lfa_PowerMgmtData_ConfigurationObjectContext", "lfa_PowerMgmtData_ConfigurationObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new lfa_PowerMgmtData_ConfigurationObjectContext object.
        /// </summary>
        public lfa_PowerMgmtData_ConfigurationObjectContext(string connectionString) : base(connectionString, "lfa_PowerMgmtData_ConfigurationObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new lfa_PowerMgmtData_ConfigurationObjectContext object.
        /// </summary>
        public lfa_PowerMgmtData_ConfigurationObjectContext(EntityConnection connection) : base(connection, "lfa_PowerMgmtData_ConfigurationObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Configuration_Device> Configuration_Devices
        {
            get
            {
                if ((_Configuration_Devices == null))
                {
                    _Configuration_Devices = base.CreateObjectSet<Configuration_Device>("Configuration_Devices");
                }
                return _Configuration_Devices;
            }
        }
        private ObjectSet<Configuration_Device> _Configuration_Devices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Configuration_Unit> Configuration_Unit
        {
            get
            {
                if ((_Configuration_Unit == null))
                {
                    _Configuration_Unit = base.CreateObjectSet<Configuration_Unit>("Configuration_Unit");
                }
                return _Configuration_Unit;
            }
        }
        private ObjectSet<Configuration_Unit> _Configuration_Unit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Configuration_Zone> Configuration_Zones
        {
            get
            {
                if ((_Configuration_Zones == null))
                {
                    _Configuration_Zones = base.CreateObjectSet<Configuration_Zone>("Configuration_Zones");
                }
                return _Configuration_Zones;
            }
        }
        private ObjectSet<Configuration_Zone> _Configuration_Zones;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configuration_Devices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfiguration_Devices(Configuration_Device configuration_Device)
        {
            base.AddObject("Configuration_Devices", configuration_Device);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configuration_Unit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfiguration_Unit(Configuration_Unit configuration_Unit)
        {
            base.AddObject("Configuration_Unit", configuration_Unit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configuration_Zones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfiguration_Zones(Configuration_Zone configuration_Zone)
        {
            base.AddObject("Configuration_Zones", configuration_Zone);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lfa_PowerMgmtData_Configuration", Name="Configuration_Device")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Configuration_Device : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Configuration_Device object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="id_Unit">Initial value of the Id_Unit property.</param>
        public static Configuration_Device CreateConfiguration_Device(global::System.Int32 id, global::System.String name, global::System.DateTime dateAdded, global::System.Boolean isActive, global::System.Int32 id_Unit)
        {
            Configuration_Device configuration_Device = new Configuration_Device();
            configuration_Device.Id = id;
            configuration_Device.Name = name;
            configuration_Device.DateAdded = dateAdded;
            configuration_Device.IsActive = isActive;
            configuration_Device.Id_Unit = id_Unit;
            return configuration_Device;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_Unit
        {
            get
            {
                return _Id_Unit;
            }
            set
            {
                OnId_UnitChanging(value);
                ReportPropertyChanging("Id_Unit");
                _Id_Unit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Unit");
                OnId_UnitChanged();
            }
        }
        private global::System.Int32 _Id_Unit;
        partial void OnId_UnitChanging(global::System.Int32 value);
        partial void OnId_UnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Id_Zone
        {
            get
            {
                return _Id_Zone;
            }
            set
            {
                OnId_ZoneChanging(value);
                ReportPropertyChanging("Id_Zone");
                _Id_Zone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Zone");
                OnId_ZoneChanged();
            }
        }
        private Nullable<global::System.Int32> _Id_Zone;
        partial void OnId_ZoneChanging(Nullable<global::System.Int32> value);
        partial void OnId_ZoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData_Configuration", "Configuration_Unit_Configuration_Device", "Configuration_Unit")]
        public Configuration_Unit Configuration_Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration_Unit>("lfa_PowerMgmtData_Configuration.Configuration_Unit_Configuration_Device", "Configuration_Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration_Unit>("lfa_PowerMgmtData_Configuration.Configuration_Unit_Configuration_Device", "Configuration_Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Configuration_Unit> Configuration_UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration_Unit>("lfa_PowerMgmtData_Configuration.Configuration_Unit_Configuration_Device", "Configuration_Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Configuration_Unit>("lfa_PowerMgmtData_Configuration.Configuration_Unit_Configuration_Device", "Configuration_Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData_Configuration", "FK_Device_Zone", "Zone")]
        public Configuration_Zone Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration_Zone>("lfa_PowerMgmtData_Configuration.FK_Device_Zone", "Zone").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration_Zone>("lfa_PowerMgmtData_Configuration.FK_Device_Zone", "Zone").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Configuration_Zone> ZoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration_Zone>("lfa_PowerMgmtData_Configuration.FK_Device_Zone", "Zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Configuration_Zone>("lfa_PowerMgmtData_Configuration.FK_Device_Zone", "Zone", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lfa_PowerMgmtData_Configuration", Name="Configuration_Unit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Configuration_Unit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Configuration_Unit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="id_Zone">Initial value of the Id_Zone property.</param>
        public static Configuration_Unit CreateConfiguration_Unit(global::System.Int32 id, global::System.String name, global::System.DateTime dateAdded, global::System.String address, global::System.Boolean isActive, global::System.Int32 id_Zone)
        {
            Configuration_Unit configuration_Unit = new Configuration_Unit();
            configuration_Unit.Id = id;
            configuration_Unit.Name = name;
            configuration_Unit.DateAdded = dateAdded;
            configuration_Unit.Address = address;
            configuration_Unit.IsActive = isActive;
            configuration_Unit.Id_Zone = id_Zone;
            return configuration_Unit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_Zone
        {
            get
            {
                return _Id_Zone;
            }
            set
            {
                OnId_ZoneChanging(value);
                ReportPropertyChanging("Id_Zone");
                _Id_Zone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Zone");
                OnId_ZoneChanged();
            }
        }
        private global::System.Int32 _Id_Zone;
        partial void OnId_ZoneChanging(global::System.Int32 value);
        partial void OnId_ZoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData_Configuration", "Configuration_Unit_Configuration_Device", "Configuration_Device")]
        public EntityCollection<Configuration_Device> Configuration_Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Configuration_Device>("lfa_PowerMgmtData_Configuration.Configuration_Unit_Configuration_Device", "Configuration_Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Configuration_Device>("lfa_PowerMgmtData_Configuration.Configuration_Unit_Configuration_Device", "Configuration_Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData_Configuration", "Configuration_Zone_Configuration_Unit", "Configuration_Zone")]
        public Configuration_Zone Configuration_Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration_Zone>("lfa_PowerMgmtData_Configuration.Configuration_Zone_Configuration_Unit", "Configuration_Zone").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration_Zone>("lfa_PowerMgmtData_Configuration.Configuration_Zone_Configuration_Unit", "Configuration_Zone").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Configuration_Zone> Configuration_ZoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration_Zone>("lfa_PowerMgmtData_Configuration.Configuration_Zone_Configuration_Unit", "Configuration_Zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Configuration_Zone>("lfa_PowerMgmtData_Configuration.Configuration_Zone_Configuration_Unit", "Configuration_Zone", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lfa_PowerMgmtData_Configuration", Name="Configuration_Zone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Configuration_Zone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Configuration_Zone object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Configuration_Zone CreateConfiguration_Zone(global::System.Int32 id, global::System.String name, global::System.DateTime dateAdded, global::System.Boolean isActive)
        {
            Configuration_Zone configuration_Zone = new Configuration_Zone();
            configuration_Zone.Id = id;
            configuration_Zone.Name = name;
            configuration_Zone.DateAdded = dateAdded;
            configuration_Zone.IsActive = isActive;
            return configuration_Zone;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData_Configuration", "Configuration_Zone_Configuration_Unit", "Configuration_Unit")]
        public EntityCollection<Configuration_Unit> Configuration_Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Configuration_Unit>("lfa_PowerMgmtData_Configuration.Configuration_Zone_Configuration_Unit", "Configuration_Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Configuration_Unit>("lfa_PowerMgmtData_Configuration.Configuration_Zone_Configuration_Unit", "Configuration_Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lfa_PowerMgmtData_Configuration", "FK_Device_Zone", "Device")]
        public EntityCollection<Configuration_Device> Devices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Configuration_Device>("lfa_PowerMgmtData_Configuration.FK_Device_Zone", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Configuration_Device>("lfa_PowerMgmtData_Configuration.FK_Device_Zone", "Device", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
