//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication.Implementation
{
    
    #region Configuration_Device
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/lfa_PowerMgmtData_Configuration.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Configuration_Device :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Configuration_Device.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if (this._Name != value)
                {
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._Name = value;
                    this.RaiseDataMemberChanged("Name");
                }
            }
        }
        private string _Name;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return this._DateAdded;
            }
            set
            {
                if (this._DateAdded != value)
                {
                    this.RaiseDataMemberChanging("DateAdded");
                    this.ValidateProperty("DateAdded", value);
                    this._DateAdded = value;
                    this.RaiseDataMemberChanged("DateAdded");
                }
            }
        }
        private global::System.DateTime _DateAdded;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                if (this._IsActive != value)
                {
                    this.RaiseDataMemberChanging("IsActive");
                    this.ValidateProperty("IsActive", value);
                    this._IsActive = value;
                    this.RaiseDataMemberChanged("IsActive");
                }
            }
        }
        private bool _IsActive;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id_Unit
        {
            get
            {
                return this._Id_Unit;
            }
            set
            {
                if (this._Id_Unit != value)
                {
                    this.RaiseDataMemberChanging("Id_Unit");
                    this.ValidateProperty("Id_Unit", value);
                    this._Id_Unit = value;
                    this.RaiseDataMemberChanged("Id_Unit");
                }
            }
        }
        private int _Id_Unit;
        
        [global::System.ComponentModel.DataAnnotations.Association("Configuration_Unit_Configuration_Device", "Id_Unit", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Configuration_Unit Configuration_Unit
        {
            get
            {
                if (this._Configuration_Unit == null)
                {
                    this._Configuration_Unit = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Configuration_Unit>(this, "Configuration_Unit", this.FilterConfiguration_Unit);
                }
                return this._Configuration_Unit.Entity;
            }
            set
            {
                Configuration_Unit previous = this.Configuration_Unit;
                if (previous != value)
                {
                    this.ValidateProperty("Configuration_Unit", value);
                    if (previous != null)
                    {
                        this._Configuration_Unit.Entity = null;
                        previous.Configuration_Device.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Id_Unit = value.Id;
                    }
                    else
                    {
                        this.Id_Unit = default(int);
                    }
                    this._Configuration_Unit.Entity = value;
                    if (value != null)
                    {
                        value.Configuration_Device.Add(this);
                    }
                    this.RaisePropertyChanged("Configuration_Unit");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Configuration_Unit> _Configuration_Unit;
        private bool FilterConfiguration_Unit(global::LightSwitchApplication.Implementation.Configuration_Unit entity)
        {
            return global::System.Object.Equals(entity.Id, this.Id_Unit);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Configuration_Device.DetailsClass.IImplementation.Configuration_Unit
        {
            get
            {
                return this.Configuration_Unit;
            }
            set
            {
                this.Configuration_Unit = (global::LightSwitchApplication.Implementation.Configuration_Unit)value;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<int> Id_Zone
        {
            get
            {
                return this._Id_Zone;
            }
            set
            {
                if (this._Id_Zone != value)
                {
                    this.RaiseDataMemberChanging("Id_Zone");
                    this.ValidateProperty("Id_Zone", value);
                    this._Id_Zone = value;
                    this.RaiseDataMemberChanged("Id_Zone");
                }
            }
        }
        private global::System.Nullable<int> _Id_Zone;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_Device_Zone", "Id_Zone", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Configuration_Zone Zone
        {
            get
            {
                if (this._Zone == null)
                {
                    this._Zone = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Configuration_Zone>(this, "Zone", this.FilterZone);
                }
                return this._Zone.Entity;
            }
            set
            {
                Configuration_Zone previous = this.Zone;
                if (previous != value)
                {
                    this.ValidateProperty("Zone", value);
                    if (previous != null)
                    {
                        this._Zone.Entity = null;
                        previous.Devices.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Id_Zone = value.Id;
                    }
                    else
                    {
                        this.Id_Zone = default(global::System.Nullable<int>);
                    }
                    this._Zone.Entity = value;
                    if (value != null)
                    {
                        value.Devices.Add(this);
                    }
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Configuration_Zone> _Zone;
        private bool FilterZone(global::LightSwitchApplication.Implementation.Configuration_Zone entity)
        {
            return global::System.Object.Equals(entity.Id, this.Id_Zone);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Configuration_Device.DetailsClass.IImplementation.Zone
        {
            get
            {
                return this.Zone;
            }
            set
            {
                this.Zone = (global::LightSwitchApplication.Implementation.Configuration_Zone)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Configuration_Unit
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/lfa_PowerMgmtData_Configuration.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Configuration_Unit :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Configuration_Unit.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if (this._Name != value)
                {
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._Name = value;
                    this.RaiseDataMemberChanged("Name");
                }
            }
        }
        private string _Name;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return this._DateAdded;
            }
            set
            {
                if (this._DateAdded != value)
                {
                    this.RaiseDataMemberChanging("DateAdded");
                    this.ValidateProperty("DateAdded", value);
                    this._DateAdded = value;
                    this.RaiseDataMemberChanged("DateAdded");
                }
            }
        }
        private global::System.DateTime _DateAdded;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if (this._Address != value)
                {
                    this.RaiseDataMemberChanging("Address");
                    this.ValidateProperty("Address", value);
                    this._Address = value;
                    this.RaiseDataMemberChanged("Address");
                }
            }
        }
        private string _Address;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                if (this._IsActive != value)
                {
                    this.RaiseDataMemberChanging("IsActive");
                    this.ValidateProperty("IsActive", value);
                    this._IsActive = value;
                    this.RaiseDataMemberChanged("IsActive");
                }
            }
        }
        private bool _IsActive;
        
        [global::System.ComponentModel.DataAnnotations.Association("Configuration_Unit_Configuration_Device", "Id", "Id_Unit")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Configuration_Device> Configuration_Device
        {
            get
            {
                if (this._Configuration_Device == null)
                {
                    this._Configuration_Device = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Configuration_Device>(this, "Configuration_Device", this.FilterConfiguration_Device, this.AttachConfiguration_Device, this.DetachConfiguration_Device);
                }
                return this._Configuration_Device;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Configuration_Device> _Configuration_Device;
        private void AttachConfiguration_Device(global::LightSwitchApplication.Implementation.Configuration_Device entity)
        {
            entity.Configuration_Unit = this;
        }
        private void DetachConfiguration_Device(global::LightSwitchApplication.Implementation.Configuration_Device entity)
        {
            entity.Configuration_Unit = null;
        }
        private bool FilterConfiguration_Device(global::LightSwitchApplication.Implementation.Configuration_Device entity)
        {
            return global::System.Object.Equals(entity.Id_Unit, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Configuration_Unit.DetailsClass.IImplementation.Configuration_Device
        {
            get
            {
                return this.Configuration_Device;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id_Zone
        {
            get
            {
                return this._Id_Zone;
            }
            set
            {
                if (this._Id_Zone != value)
                {
                    this.RaiseDataMemberChanging("Id_Zone");
                    this.ValidateProperty("Id_Zone", value);
                    this._Id_Zone = value;
                    this.RaiseDataMemberChanged("Id_Zone");
                }
            }
        }
        private int _Id_Zone;
        
        [global::System.ComponentModel.DataAnnotations.Association("Configuration_Zone_Configuration_Unit", "Id_Zone", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Configuration_Zone Configuration_Zone
        {
            get
            {
                if (this._Configuration_Zone == null)
                {
                    this._Configuration_Zone = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Configuration_Zone>(this, "Configuration_Zone", this.FilterConfiguration_Zone);
                }
                return this._Configuration_Zone.Entity;
            }
            set
            {
                Configuration_Zone previous = this.Configuration_Zone;
                if (previous != value)
                {
                    this.ValidateProperty("Configuration_Zone", value);
                    if (previous != null)
                    {
                        this._Configuration_Zone.Entity = null;
                        previous.Configuration_Unit.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Id_Zone = value.Id;
                    }
                    else
                    {
                        this.Id_Zone = default(int);
                    }
                    this._Configuration_Zone.Entity = value;
                    if (value != null)
                    {
                        value.Configuration_Unit.Add(this);
                    }
                    this.RaisePropertyChanged("Configuration_Zone");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Configuration_Zone> _Configuration_Zone;
        private bool FilterConfiguration_Zone(global::LightSwitchApplication.Implementation.Configuration_Zone entity)
        {
            return global::System.Object.Equals(entity.Id, this.Id_Zone);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Configuration_Unit.DetailsClass.IImplementation.Configuration_Zone
        {
            get
            {
                return this.Configuration_Zone;
            }
            set
            {
                this.Configuration_Zone = (global::LightSwitchApplication.Implementation.Configuration_Zone)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Configuration_Zone
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/lfa_PowerMgmtData_Configuration.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Configuration_Zone :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Configuration_Zone.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if (this._Name != value)
                {
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._Name = value;
                    this.RaiseDataMemberChanged("Name");
                }
            }
        }
        private string _Name;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return this._DateAdded;
            }
            set
            {
                if (this._DateAdded != value)
                {
                    this.RaiseDataMemberChanging("DateAdded");
                    this.ValidateProperty("DateAdded", value);
                    this._DateAdded = value;
                    this.RaiseDataMemberChanged("DateAdded");
                }
            }
        }
        private global::System.DateTime _DateAdded;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                if (this._IsActive != value)
                {
                    this.RaiseDataMemberChanging("IsActive");
                    this.ValidateProperty("IsActive", value);
                    this._IsActive = value;
                    this.RaiseDataMemberChanged("IsActive");
                }
            }
        }
        private bool _IsActive;
        
        [global::System.ComponentModel.DataAnnotations.Association("Configuration_Zone_Configuration_Unit", "Id", "Id_Zone")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Configuration_Unit> Configuration_Unit
        {
            get
            {
                if (this._Configuration_Unit == null)
                {
                    this._Configuration_Unit = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Configuration_Unit>(this, "Configuration_Unit", this.FilterConfiguration_Unit, this.AttachConfiguration_Unit, this.DetachConfiguration_Unit);
                }
                return this._Configuration_Unit;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Configuration_Unit> _Configuration_Unit;
        private void AttachConfiguration_Unit(global::LightSwitchApplication.Implementation.Configuration_Unit entity)
        {
            entity.Configuration_Zone = this;
        }
        private void DetachConfiguration_Unit(global::LightSwitchApplication.Implementation.Configuration_Unit entity)
        {
            entity.Configuration_Zone = null;
        }
        private bool FilterConfiguration_Unit(global::LightSwitchApplication.Implementation.Configuration_Unit entity)
        {
            return global::System.Object.Equals(entity.Id_Zone, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Configuration_Zone.DetailsClass.IImplementation.Configuration_Unit
        {
            get
            {
                return this.Configuration_Unit;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_Device_Zone", "Id", "Id_Zone")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Configuration_Device> Devices
        {
            get
            {
                if (this._Devices == null)
                {
                    this._Devices = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Configuration_Device>(this, "Devices", this.FilterDevices, this.AttachDevices, this.DetachDevices);
                }
                return this._Devices;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Configuration_Device> _Devices;
        private void AttachDevices(global::LightSwitchApplication.Implementation.Configuration_Device entity)
        {
            entity.Zone = this;
        }
        private void DetachDevices(global::LightSwitchApplication.Implementation.Configuration_Device entity)
        {
            entity.Zone = null;
        }
        private bool FilterDevices(global::LightSwitchApplication.Implementation.Configuration_Device entity)
        {
            return global::System.Object.Equals(entity.Id_Zone, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Configuration_Zone.DetailsClass.IImplementation.Devices
        {
            get
            {
                return this.Devices;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Schedule_Device
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/lfa_PowerMgmtData_Schedule.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Schedule_Device :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Schedule_Device.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id_Device
        {
            get
            {
                return this._Id_Device;
            }
            set
            {
                if (this._Id_Device != value)
                {
                    this.RaiseDataMemberChanging("Id_Device");
                    this.ValidateProperty("Id_Device", value);
                    this._Id_Device = value;
                    this.RaiseDataMemberChanged("Id_Device");
                }
            }
        }
        private int _Id_Device;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<int> Id_ScheduleUnit
        {
            get
            {
                return this._Id_ScheduleUnit;
            }
            set
            {
                if (this._Id_ScheduleUnit != value)
                {
                    this.RaiseDataMemberChanging("Id_ScheduleUnit");
                    this.ValidateProperty("Id_ScheduleUnit", value);
                    this._Id_ScheduleUnit = value;
                    this.RaiseDataMemberChanged("Id_ScheduleUnit");
                }
            }
        }
        private global::System.Nullable<int> _Id_ScheduleUnit;
        
        [global::System.ComponentModel.DataAnnotations.Association("Schedule_Unit_Schedule_Device", "Id_ScheduleUnit", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Schedule_Unit Schedule_Unit
        {
            get
            {
                if (this._Schedule_Unit == null)
                {
                    this._Schedule_Unit = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Schedule_Unit>(this, "Schedule_Unit", this.FilterSchedule_Unit);
                }
                return this._Schedule_Unit.Entity;
            }
            set
            {
                Schedule_Unit previous = this.Schedule_Unit;
                if (previous != value)
                {
                    this.ValidateProperty("Schedule_Unit", value);
                    if (previous != null)
                    {
                        this._Schedule_Unit.Entity = null;
                        previous.Schedule_Device.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Id_ScheduleUnit = value.Id;
                    }
                    else
                    {
                        this.Id_ScheduleUnit = default(global::System.Nullable<int>);
                    }
                    this._Schedule_Unit.Entity = value;
                    if (value != null)
                    {
                        value.Schedule_Device.Add(this);
                    }
                    this.RaisePropertyChanged("Schedule_Unit");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Schedule_Unit> _Schedule_Unit;
        private bool FilterSchedule_Unit(global::LightSwitchApplication.Implementation.Schedule_Unit entity)
        {
            return global::System.Object.Equals(entity.Id, this.Id_ScheduleUnit);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Schedule_Device.DetailsClass.IImplementation.Schedule_Unit
        {
            get
            {
                return this.Schedule_Unit;
            }
            set
            {
                this.Schedule_Unit = (global::LightSwitchApplication.Implementation.Schedule_Unit)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Schedule_Schedule
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/lfa_PowerMgmtData_Schedule.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Schedule_Schedule :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Schedule_Schedule.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if (this._Name != value)
                {
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._Name = value;
                    this.RaiseDataMemberChanged("Name");
                }
            }
        }
        private string _Name;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string StartTime
        {
            get
            {
                return this._StartTime;
            }
            set
            {
                if (this._StartTime != value)
                {
                    this.RaiseDataMemberChanging("StartTime");
                    this.ValidateProperty("StartTime", value);
                    this._StartTime = value;
                    this.RaiseDataMemberChanged("StartTime");
                }
            }
        }
        private string _StartTime;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string EndTime
        {
            get
            {
                return this._EndTime;
            }
            set
            {
                if (this._EndTime != value)
                {
                    this.RaiseDataMemberChanging("EndTime");
                    this.ValidateProperty("EndTime", value);
                    this._EndTime = value;
                    this.RaiseDataMemberChanged("EndTime");
                }
            }
        }
        private string _EndTime;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int ElapseTime
        {
            get
            {
                return this._ElapseTime;
            }
            set
            {
                if (this._ElapseTime != value)
                {
                    this.RaiseDataMemberChanging("ElapseTime");
                    this.ValidateProperty("ElapseTime", value);
                    this._ElapseTime = value;
                    this.RaiseDataMemberChanged("ElapseTime");
                }
            }
        }
        private int _ElapseTime;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return this._DateAdded;
            }
            set
            {
                if (this._DateAdded != value)
                {
                    this.RaiseDataMemberChanging("DateAdded");
                    this.ValidateProperty("DateAdded", value);
                    this._DateAdded = value;
                    this.RaiseDataMemberChanged("DateAdded");
                }
            }
        }
        private global::System.DateTime _DateAdded;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<bool> IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                if (this._IsActive != value)
                {
                    this.RaiseDataMemberChanging("IsActive");
                    this.ValidateProperty("IsActive", value);
                    this._IsActive = value;
                    this.RaiseDataMemberChanged("IsActive");
                }
            }
        }
        private global::System.Nullable<bool> _IsActive;
        
        [global::System.ComponentModel.DataAnnotations.Association("Schedule_Schedule_Schedule_Unit", "Id", "Id_Schedule")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Schedule_Unit> Schedule_Unit
        {
            get
            {
                if (this._Schedule_Unit == null)
                {
                    this._Schedule_Unit = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Schedule_Unit>(this, "Schedule_Unit", this.FilterSchedule_Unit, this.AttachSchedule_Unit, this.DetachSchedule_Unit);
                }
                return this._Schedule_Unit;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Schedule_Unit> _Schedule_Unit;
        private void AttachSchedule_Unit(global::LightSwitchApplication.Implementation.Schedule_Unit entity)
        {
            entity.Schedule_Schedule = this;
        }
        private void DetachSchedule_Unit(global::LightSwitchApplication.Implementation.Schedule_Unit entity)
        {
            entity.Schedule_Schedule = null;
        }
        private bool FilterSchedule_Unit(global::LightSwitchApplication.Implementation.Schedule_Unit entity)
        {
            return global::System.Object.Equals(entity.Id_Schedule, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Schedule_Schedule.DetailsClass.IImplementation.Schedule_Unit
        {
            get
            {
                return this.Schedule_Unit;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Schedule_Unit
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/lfa_PowerMgmtData_Schedule.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Schedule_Unit :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Schedule_Unit.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id_Unit
        {
            get
            {
                return this._Id_Unit;
            }
            set
            {
                if (this._Id_Unit != value)
                {
                    this.RaiseDataMemberChanging("Id_Unit");
                    this.ValidateProperty("Id_Unit", value);
                    this._Id_Unit = value;
                    this.RaiseDataMemberChanged("Id_Unit");
                }
            }
        }
        private int _Id_Unit;
        
        [global::System.ComponentModel.DataAnnotations.Association("Schedule_Unit_Schedule_Device", "Id", "Id_ScheduleUnit")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Schedule_Device> Schedule_Device
        {
            get
            {
                if (this._Schedule_Device == null)
                {
                    this._Schedule_Device = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Schedule_Device>(this, "Schedule_Device", this.FilterSchedule_Device, this.AttachSchedule_Device, this.DetachSchedule_Device);
                }
                return this._Schedule_Device;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Schedule_Device> _Schedule_Device;
        private void AttachSchedule_Device(global::LightSwitchApplication.Implementation.Schedule_Device entity)
        {
            entity.Schedule_Unit = this;
        }
        private void DetachSchedule_Device(global::LightSwitchApplication.Implementation.Schedule_Device entity)
        {
            entity.Schedule_Unit = null;
        }
        private bool FilterSchedule_Device(global::LightSwitchApplication.Implementation.Schedule_Device entity)
        {
            return global::System.Object.Equals(entity.Id_ScheduleUnit, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Schedule_Unit.DetailsClass.IImplementation.Schedule_Device
        {
            get
            {
                return this.Schedule_Device;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id_Schedule
        {
            get
            {
                return this._Id_Schedule;
            }
            set
            {
                if (this._Id_Schedule != value)
                {
                    this.RaiseDataMemberChanging("Id_Schedule");
                    this.ValidateProperty("Id_Schedule", value);
                    this._Id_Schedule = value;
                    this.RaiseDataMemberChanged("Id_Schedule");
                }
            }
        }
        private int _Id_Schedule;
        
        [global::System.ComponentModel.DataAnnotations.Association("Schedule_Schedule_Schedule_Unit", "Id_Schedule", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Schedule_Schedule Schedule_Schedule
        {
            get
            {
                if (this._Schedule_Schedule == null)
                {
                    this._Schedule_Schedule = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Schedule_Schedule>(this, "Schedule_Schedule", this.FilterSchedule_Schedule);
                }
                return this._Schedule_Schedule.Entity;
            }
            set
            {
                Schedule_Schedule previous = this.Schedule_Schedule;
                if (previous != value)
                {
                    this.ValidateProperty("Schedule_Schedule", value);
                    if (previous != null)
                    {
                        this._Schedule_Schedule.Entity = null;
                        previous.Schedule_Unit.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Id_Schedule = value.Id;
                    }
                    else
                    {
                        this.Id_Schedule = default(int);
                    }
                    this._Schedule_Schedule.Entity = value;
                    if (value != null)
                    {
                        value.Schedule_Unit.Add(this);
                    }
                    this.RaisePropertyChanged("Schedule_Schedule");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Schedule_Schedule> _Schedule_Schedule;
        private bool FilterSchedule_Schedule(global::LightSwitchApplication.Implementation.Schedule_Schedule entity)
        {
            return global::System.Object.Equals(entity.Id, this.Id_Schedule);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Schedule_Unit.DetailsClass.IImplementation.Schedule_Schedule
        {
            get
            {
                return this.Schedule_Schedule;
            }
            set
            {
                this.Schedule_Schedule = (global::LightSwitchApplication.Implementation.Schedule_Schedule)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region lfa_PowerMgmtData_Configuration
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class lfa_PowerMgmtData_Configuration
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public lfa_PowerMgmtData_Configuration(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<Ilfa_PowerMgmtData_ConfigurationContract>(new global::System.Uri("LightSwitchApplication-Implementation-lfa_PowerMgmtData_ConfigurationDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Configuration_Device> Configuration_DeviceEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Configuration_Device>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Configuration_Unit> Configuration_UnitEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Configuration_Unit>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Configuration_Zone> Configuration_ZoneEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Configuration_Zone>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new lfa_PowerMgmtData_ConfigurationEntityContainer();
        }
    
        internal sealed class lfa_PowerMgmtData_ConfigurationEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public lfa_PowerMgmtData_ConfigurationEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Configuration_Device>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Configuration_Unit>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Configuration_Zone>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface Ilfa_PowerMgmtData_ConfigurationContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Devices_Single", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Devices_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Devices_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginConfiguration_Devices_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Configuration_Device> EndConfiguration_Devices_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Devices_SingleOrDefault", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Devices_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Devices_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginConfiguration_Devices_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Configuration_Device> EndConfiguration_Devices_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Devices_All", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Devices_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Devices_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginConfiguration_Devices_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Configuration_Device> EndConfiguration_Devices_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Unit_Single", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Unit_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Unit_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginConfiguration_Unit_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Configuration_Unit> EndConfiguration_Unit_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Unit_SingleOrDefault", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Unit_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Unit_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginConfiguration_Unit_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Configuration_Unit> EndConfiguration_Unit_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Unit_All", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Unit_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Unit_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginConfiguration_Unit_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Configuration_Unit> EndConfiguration_Unit_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Zones_Single", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Zones_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Zones_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginConfiguration_Zones_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Configuration_Zone> EndConfiguration_Zones_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Zones_SingleOrDefault", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Zones_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Zones_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginConfiguration_Zones_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Configuration_Zone> EndConfiguration_Zones_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Zones_All", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Zones_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/Configuration_Zones_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginConfiguration_Zones_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Configuration_Zone> EndConfiguration_Zones_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ConfigurationDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Configuration_Device))
            {
                return new global::LightSwitchApplication.Implementation.Configuration_Device();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Configuration_Unit))
            {
                return new global::LightSwitchApplication.Implementation.Configuration_Unit();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Configuration_Zone))
            {
                return new global::LightSwitchApplication.Implementation.Configuration_Zone();
            }
            return null;
        }
    }
    #endregion
    
    #region lfa_PowerMgmtData_Schedule
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class lfa_PowerMgmtData_Schedule
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public lfa_PowerMgmtData_Schedule(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<Ilfa_PowerMgmtData_ScheduleContract>(new global::System.Uri("LightSwitchApplication-Implementation-lfa_PowerMgmtData_ScheduleDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Schedule_Device> Schedule_DeviceEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Schedule_Device>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Schedule_Schedule> Schedule_ScheduleEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Schedule_Schedule>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Schedule_Unit> Schedule_UnitEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Schedule_Unit>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new lfa_PowerMgmtData_ScheduleEntityContainer();
        }
    
        internal sealed class lfa_PowerMgmtData_ScheduleEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public lfa_PowerMgmtData_ScheduleEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Schedule_Device>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Schedule_Schedule>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Schedule_Unit>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface Ilfa_PowerMgmtData_ScheduleContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Device_Single", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Device_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Device_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSchedule_Device_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Schedule_Device> EndSchedule_Device_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Device_SingleOrDefault", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Device_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Device_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSchedule_Device_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Schedule_Device> EndSchedule_Device_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Device_All", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Device_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Device_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSchedule_Device_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Schedule_Device> EndSchedule_Device_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Schedule_Single", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Schedule_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Schedule_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSchedule_Schedule_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Schedule_Schedule> EndSchedule_Schedule_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Schedule_SingleOrDefault", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Schedule_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Schedule_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSchedule_Schedule_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Schedule_Schedule> EndSchedule_Schedule_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Schedule_All", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Schedule_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Schedule_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSchedule_Schedule_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Schedule_Schedule> EndSchedule_Schedule_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Unit_Single", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Unit_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Unit_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSchedule_Unit_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Schedule_Unit> EndSchedule_Unit_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Unit_SingleOrDefault", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Unit_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Unit_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSchedule_Unit_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Schedule_Unit> EndSchedule_Unit_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Unit_All", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Unit_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/Schedule_Unit_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSchedule_Unit_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Schedule_Unit> EndSchedule_Unit_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/lfa_PowerMgmtData_ScheduleDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Schedule_Device))
            {
                return new global::LightSwitchApplication.Implementation.Schedule_Device();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Schedule_Schedule))
            {
                return new global::LightSwitchApplication.Implementation.Schedule_Schedule();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Schedule_Unit))
            {
                return new global::LightSwitchApplication.Implementation.Schedule_Unit();
            }
            return null;
        }
    }
    #endregion
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.lfa_PowerMgmtData_Configuration))
            {
                return new global::LightSwitchApplication.lfa_PowerMgmtData_Configuration();
            }
            if (dataServiceType == typeof(global::LightSwitchApplication.lfa_PowerMgmtData_Schedule))
            {
                return new global::LightSwitchApplication.lfa_PowerMgmtData_Schedule();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.lfa_PowerMgmtData_Configuration))
            {
                return new global::LightSwitchApplication.Implementation.lfa_PowerMgmtData_Configuration(dataService);
            }
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.lfa_PowerMgmtData_Schedule))
            {
                return new global::LightSwitchApplication.Implementation.lfa_PowerMgmtData_Schedule(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.Configuration_Device) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Configuration_Device);
            }
            if (typeof(global::LightSwitchApplication.Configuration_Unit) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Configuration_Unit);
            }
            if (typeof(global::LightSwitchApplication.Configuration_Zone) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Configuration_Zone);
            }
            if (typeof(global::LightSwitchApplication.Schedule_Device) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Schedule_Device);
            }
            if (typeof(global::LightSwitchApplication.Schedule_Schedule) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Schedule_Schedule);
            }
            if (typeof(global::LightSwitchApplication.Schedule_Unit) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Schedule_Unit);
            }
            return null;
        }
    }
}
